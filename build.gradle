buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
    classpath 'org.ajoberstar:gradle-git:1.4.2'
    classpath 'org.apache.commons:commons-io:1.3.2'
    classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.12.1'
  }
}
plugins {
  id 'net.researchgate.release' version '2.3.4'
}

apply plugin: 'io.codearte.nexus-staging' // must be in root project
apply from: 'gradle/readme.gradle'

// expose FileUtils to imported Gradle scripts
project.ext.FileUtils = org.apache.commons.io.FileUtils

release {
  tagTemplate = 'v_${version}' // must be single-quotes
  preTagCommitMessage = ':cloud: Release'
  tagCommitMessage = ':cloud: Release'
  newVersionCommitMessage = ':cloud: Bump'
}

allprojects  {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'nebula.provided-base'
  apply plugin: 'nebula.optional-base'
  apply from: "${rootProject.projectDir}/gradle/nexus.gradle"

  group = 'com.github.tony19'
  version = version
  slf4jVersion = slf4jVersion
}

subprojects {
  apply from: "${rootProject.projectDir}/gradle/analysis.gradle"
  apply from: "${rootProject.projectDir}/gradle/license.gradle"

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  test {
    maxParallelForks = 4
    include '**/*Test.class'

    // Skip fragile network tests (to be refactored later)
    exclude '**/net/**'

    // Skip performance tests, since they're already run in their own 'perf' task
    exclude '**/*PerfTest*'
  }

  repositories {
    mavenLocal()

    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
    maven { url 'url "https://maven.java.net/content/groups/public/' }
  }

  dependencies {
    testCompile(group: 'junit', name: 'junit', version: '4.10') {
      exclude(module: 'hamcrest-core')
    }
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.mockito:mockito-core:1.9.0'
  }

  compileJava {
    // Include debug symbols with `gradle build -Pdebug` on command line.
    // Automatically enable symbols for code analysis.
    options.debug = project.hasProperty('debug') || project.hasProperty('analysis')

    // Show deprecation warnings
    options.deprecation = true
  }
}

apply from: "gradle/docs.gradle" // must be after subprojects